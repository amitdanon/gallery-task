{"remainingRequest":"/Users/amitdanon/Desktop/search-task/client3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/amitdanon/Desktop/search-task/client3/src/components/Gallery.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/amitdanon/Desktop/search-task/client3/src/components/Gallery.vue","mtime":1625415536702},{"path":"/Users/amitdanon/Desktop/search-task/client3/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amitdanon/Desktop/search-task/client3/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/amitdanon/Desktop/search-task/client3/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/amitdanon/Desktop/search-task/client3/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amitdanon/Desktop/search-task/client3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amitdanon/Desktop/search-task/client3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaG9tZXsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQouaW1hZ2UtY2FyZC1ncmlkIHsKICBsaXN0LXN0eWxlOiBub25lOwogIG1hcmdpbjogMC41cmVtIDA7CiAgcGFkZGluZzogMDsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OwogIGZsZXgtd3JhcDogd3JhcDsKfQouYnRuIHsKICBwYWRkaW5nOiAwLjVyZW0gMXJlbTsKICBmb250LXNpemU6IDFyZW07CiAgYm9yZGVyLXJhZGl1czogMjBweDsKICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsKICBib3JkZXI6IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9Ci5idG46ZGlzYWJsZWR7CiAgY3Vyc29yOm5vdC1hbGxvd2VkOwp9Cg=="},{"version":3,"sources":["Gallery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Gallery.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"home\">\n    <form>\n      <label>\n        Search:\n        <input v-model=\"flickrParams.tags\" type=\"text\" />\n      </label>\n      <button type=\"submit\" class=\"go-button\" @click.prevent=\"search\">\n        Search\n      </button>\n    </form>\n    <p v-if=\"loading\">Loading...</p>\n    <ul\n      v-else\n      class=\"image-card-grid scrolling-component\"\n      ref=\"infinitescrolltrigger\"\n    >\n      <image-card\n        @eventname=\"updateparent\"\n        v-for=\"(image, index) in images\"\n        :imageIndex=\"index\"\n        :key=\"image.id\"\n        :image=\"image\"\n      />\n    </ul>\n    <modal ref=\"modalName\">\n      <template v-slot:body>\n        <img\n          class=\"image-card__image\"\n          :src=\"modalData.url_n\"\n          :alt=\"modalData.title\"\n        />\n      </template>\n\n      <template v-slot:footer>\n        <div class=\"d-flex align-items-center justify-content-between\">\n          <button\n            :disabled=\"isDisableModalPagination('prev', modalData.index)\"\n            class=\"btn\"\n            @click=\"paginationModal(modalData.index - 1)\"\n          >\n            prev\n          </button>\n          <button\n            :disabled=\"isDisableModalPagination('next', modalData.index)\"\n            class=\"btn\"\n            @click=\"paginationModal(modalData.index + 1)\"\n          >\n            next\n          </button>\n        </div>\n      </template>\n    </modal>\n  </div>\n</template>\n\n<script>\nimport ImageCard from './ImageCard.vue'\nimport fetchFlickr from '../api/flickr.ts'\nimport Modal from './Modal.vue'\n\nexport default {\n  name: 'Gallery',\n  components: {\n    ImageCard,\n    Modal\n  },\n  data () {\n    return {\n      error: '',\n      loading: false,\n      images: [],\n      modalData: {},\n      flickrParams: {\n        page: 1,\n        tags: 'dog',\n        perPage: 30,\n        extras: 'url_n'\n      }\n    }\n  },\n  async mounted () {\n    await this.search()\n  },\n  methods: {\n    async search () {\n      this.loading = true\n      try {\n        const res = await fetchFlickr('flickr.photos.search', this.flickrParams)\n        this.images = res.data\n        this.error = ''\n      } catch (e) {\n        this.error = 'failed to fetch data'\n      }\n      this.loading = false\n    },\n    updateparent (modalData) {\n      console.log('modalData', modalData)\n      this.modalData = modalData\n      this.$refs.modalName.openModal()\n    },\n    paginationModal (nIndex) {\n      if (nIndex < 0 || nIndex === this.images.length) {\n        return\n      }\n      const nImage = this.images[nIndex]\n      this.modalData = { index: nIndex, ...nImage }\n    },\n    isDisableModalPagination (paginationType, index) {\n      return (\n        (paginationType === 'prev' && index === 0) ||\n        (paginationType === 'next' && index === this.images.length - 1)\n      )\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.home{\n    text-align: center;\n}\n.image-card-grid {\n  list-style: none;\n  margin: 0.5rem 0;\n  padding: 0;\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n}\n.btn {\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  border-radius: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n}\n.btn:disabled{\n  cursor:not-allowed;\n}\n</style>\n"]}]}